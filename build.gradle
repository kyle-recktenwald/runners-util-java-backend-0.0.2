plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.diffplug.spotless" version "6.25.0"
	id "org.sonarqube" version "5.1.0.4882"
	id "jacoco"
}

defaultTasks 'spotlessApply', 'clean', 'build', 'test'

spotless {
	java {
		target '**/*.java'
		googleJavaFormat()
		removeUnusedImports()
	}
}

group = 'com.krecktenwald'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.google.googlejavaformat:google-java-format:1.24.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}

sonar {
	properties {
		property 'sonar.projectKey', 'kyle-recktenwald_runners-util-java-backend-0.0.2'
		property 'sonar.organization', 'kyle-recktenwald'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.coverage.exclusions', '**/domain/**, **/controller/**, **/repositories/**, **/eexceptions/**'
	}
}
